{"version":3,"file":"static/js/417.4014e948.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/MoviePage.module.css?cbf3","components/SearchForm.jsx","components/pages/MoviePage/MoviePage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Link\":\"MovieList_Link__vD+MJ\",\"movieList\":\"MovieList_movieList__uFrOZ\",\"moviePoster\":\"MovieList_moviePoster__WQ7V4\",\"filmTitle\":\"MovieList_filmTitle__IDSje\"};","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport css from './MovieList.module.css'\n\n\nconst MovieList = ({movieList, location}) => {\n    return(\n        <>\n        {movieList &&\n            (<ul className={css.movieList}>\n            {movieList.map(film => \n                <li key={film.id}>\n                    <Link className={css.Link} to={`/movies/${film.id}`} state={{ from: location }}>\n                        <img src={film.backdrop_path ? (`https://image.tmdb.org/t/p/w500/${film.backdrop_path}`):('https://kartinki.pics/uploads/posts/2022-03/thumbs/1647105513_3-kartinkin-net-p-kartinki-so-znakom-voprosa-3.jpg')}\n                            alt={film.title}\n                            className={css.moviePoster} />\n                        <p className={css.filmTitle}>{film.title}</p>\n                    </Link>\n                </li>\n            )}\n        </ul>)\n    }\n        </>\n    )\n};\n\nexport default MovieList","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviePage_form__v8AjU\",\"formInput\":\"MoviePage_formInput__NFym7\",\"formButton\":\"MoviePage_formButton__4IwHH\"};","import { useSearchParams } from 'react-router-dom';\nimport css from './MoviePage.module.css'\nimport { useState } from 'react';\n\nconst SearchForm = () => {\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const paramsForSearch = searchParams.get(\"searchValue\");\n    const [value, setInputValue] = useState(paramsForSearch);\n\n        const onFormSubmit = (e) => {\n        e.preventDefault();\n        const searchData = e.currentTarget.elements.search.value;\n        setSearchParams({ searchValue: searchData });\n    };\n\n    const onInputValue = (e) => {\n        const value = e.currentTarget.value\n        setInputValue(value);\n    };\n\n\n    return (\n        <>\n            <form onSubmit={onFormSubmit}>\n                <label className={css.form} >\n                    <input\n                        className={css.formInput}\n                        type=\"text\"\n                        name=\"search\"\n                        value={value}\n                        onChange={onInputValue}\n                        placeholder=\"Search movies\"\n                        required />\n                    <button className={css.formButton}>Search</button>\n                </label>\n            </form>\n        </>\n    )\n}\n\nexport default SearchForm\n","import Loader from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react'\nimport { useLocation, useSearchParams } from 'react-router-dom'\nimport MovieList from '../../MovieList/MovieList';\nimport { searchForWord } from 'services/api';\n\nimport SearchForm from 'components/SearchForm';\n\nconst MoviePage = () => {\n\n    const [searchParams] = useSearchParams();\n    const paramsForSearch = searchParams.get(\"searchValue\");\n    const [query, setQuery] = useState();\n    const location = useLocation();\n    const [loader, setLoader] = useState(true);\n\n    useEffect(() => {\n        if (!paramsForSearch) {\n            setLoader(false)\n            return;\n        }\n        const searchReviewsFilms = async () => {\n            try {\n                const result = await searchForWord(paramsForSearch)\n                setQuery(result)\n            } catch (error) {\n                console.log(error);\n            }\n            finally {\n                setLoader(false);\n            }\n        };\n        searchReviewsFilms();\n    }, [paramsForSearch]);\n\n    return (\n        <>\n            <SearchForm />\n            {loader ? (<Loader />) : (\n                paramsForSearch !== \"\" && <MovieList movieList={query} location={location} /> \n            )}\n        </>\n    )\n}\n\nexport default MoviePage\n","import axios from \"axios\";\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst key = '6a0ae84b6fdfda8c762945c26eefc4dc';\n\n\nconst endUrl = {\n    trending: '/trending/movie/day',\n    idSearch: '/movie/',\n    credits: '/credits',\n    reviews: '/reviews',\n    wordSearch: '/search/movie'\n};\n\nexport const PopularFilms = async () => {\n    try{\n        const popularFilms = await axios.get(`${baseURL}${endUrl.trending}?api_key=${key}&page=1&language=en-US&include_adult=false`);\n        return popularFilms.data.results;\n    } catch(error) { \n        console.error(\"Error:\", error.message);\n    }\n};\n\nexport const searchForId = async (idMovie) => {\n    try{\n        const result = await axios.get(`${baseURL}${endUrl.idSearch}${idMovie}?api_key=${key}&page=1&language=en-US&include_adult=false`);\n        return result.data;\n    } catch(error) { \n        console.error(\"Error:\", error.message);\n    }\n};\n\nexport const searchForCast = async (idMovie) => {\n    try{\n        const result = await axios.get(`${baseURL}${endUrl.idSearch}${idMovie}${endUrl.credits}?api_key=${key}&page=1&language=en-US&include_adult=false`);\n        return result.data.cast;\n    } catch(error) { \n        console.error(\"Error:\", error.message);\n    }\n};\n\nexport const searchForReviews = async (idMovie) => {\n    try{\n        const result = await axios.get(`${baseURL}${endUrl.idSearch}${idMovie}${endUrl.reviews}?api_key=${key}&page=1&language=en-US&include_adult=false`);\n        return result.data.results;\n    } catch(error) { \n        console.error(\"Error:\", error.message);\n    }\n};\n\nexport const searchForWord = async (word) => {\n    try{\n        const result = await axios.get(`${baseURL}${endUrl.wordSearch}?api_key=${key}&page=1&query=${word}&language=en-US&include_adult=false`);\n        return result.data.results;\n    } catch(error) { \n        console.error(\"Error:\", error.message);\n    }\n}"],"names":["_ref","movieList","location","_jsx","_Fragment","children","className","css","map","film","_jsxs","Link","to","concat","id","state","from","src","backdrop_path","alt","title","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","paramsForSearch","get","_useState","useState","_useState2","value","setInputValue","onSubmit","e","preventDefault","searchData","currentTarget","elements","search","searchValue","type","name","onChange","placeholder","required","query","setQuery","useLocation","_useState3","_useState4","loader","setLoader","useEffect","searchReviewsFilms","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","searchForWord","sent","t0","console","log","finish","stop","apply","arguments","SearchForm","Loader","MovieList","baseURL","key","endUrl","PopularFilms","popularFilms","axios","abrupt","data","results","error","message","searchForId","_ref2","_callee2","idMovie","_context2","_x","searchForCast","_ref3","_callee3","_context3","cast","_x2","searchForReviews","_ref4","_callee4","_context4","_x3","_ref5","_callee5","word","_context5","_x4"],"sourceRoot":""}